apiVersion: v1
kind: Secret
metadata:
  name: jwt-secret
type: Opaque
data:
  JWT_SECRET: and0X3NlY3JldF9rZXlfdGhhdF9zaG91bGRfYmVfYmlnX2FuZF9yYW5kb20= # jwt_secret_key_that_should_be_big_and_random in base64
---
# Auth Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: auth
          image: auth:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@postgres:5432/task_management
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_SECRET
---
apiVersion: v1
kind: Service
metadata:
  name: auth
spec:
  selector:
    app: auth
  ports:
    - port: 3001
      targetPort: 3001
  type: ClusterIP
---
# Users Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
        - name: users
          image: users:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3002
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@postgres:5432/task_management
---
apiVersion: v1
kind: Service
metadata:
  name: users
spec:
  selector:
    app: users
  ports:
    - port: 3002
      targetPort: 3002
  type: ClusterIP
---
# Tasks Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasks
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tasks
  template:
    metadata:
      labels:
        app: tasks
    spec:
      containers:
        - name: tasks
          image: tasks:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3003
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@postgres:5432/task_management
---
apiVersion: v1
kind: Service
metadata:
  name: tasks
spec:
  selector:
    app: tasks
  ports:
    - port: 3003
      targetPort: 3003
  type: ClusterIP
---
# Orchestrator Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orchestrator
  template:
    metadata:
      labels:
        app: orchestrator
    spec:
      containers:
        - name: orchestrator
          image: orchestrator:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: AUTH_SERVICE_URL
              value: http://auth:3001
            - name: USERS_SERVICE_URL
              value: http://users:3002
            - name: TASKS_SERVICE_URL
              value: http://tasks:3003
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator
spec:
  selector:
    app: orchestrator
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30000
  type: NodePort 